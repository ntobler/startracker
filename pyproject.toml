[tool.poetry]
name = "startracker"
version = "0.1.0"
description = "Open-source Travel Photography Star Tracker"
authors = ["Nicolas Tobler <nitobler@gmail.com>"]
readme = "README.md"

include = [
    { path = "startracker/default_config.yml", format = ["sdist", "wheel"] }
]

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.24.2"
opencv-python-headless = ">=4.7.0,<4.8.0"
scipy = "^1.12.0"
flask = "^3.0.2"
flask-sock = "^0.7.0"
pyserial = "^3.5"
dynaconf = "^3.2.4"
pycairo = "^1.26.0"
cots-star-tracker = { git = "https://github.com/ntobler/COTS-Star-Tracker.git", branch = "simplification" }
typing-extensions = "^4.12.2"

[tool.poetry.group.dev.dependencies]
viztracer = "^0.16.2"
ruff = "^0.2.2"
pre-commit = "^3.6.2"
pytest = "^8.0.2"
matplotlib = "^3.8.3"
flake8 = "^7.0.0"
flake8-pyproject = "^1.2.3"
pytest-xdist = "^3.6.1"
pytest-cov = "^5.0.0"

[tool.poetry.group.experimental.dependencies]
jax = {extras = ["cpu"], version = "^0.4.25"}

[tool.poetry.scripts]
startracker = "startracker.main:main"
startracker-camera-recorder = "startracker.camera_recorder:main"
startracker-camera-calibration = "startracker.camera_webgui:main"
startracker-aligned = "startracker.axis_align:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
# Check that this is aligned with your other tools like Black
max-line-length = 100
exclude = [
    # No need to traverse our git directory
    ".git",
    # There's no value in checking cache directories
    "__pycache__"
]
# Use extend-ignore to add to already ignored checks which are anti-patterns like W503.
extend-ignore = [
    # PEP 8 recommends to treat : in slices as a binary operator with the lowest priority, and to leave an equal
    # amount of space on either side, except if a parameter is omitted (e.g. ham[1 + 1 :]).
    # This behaviour may raise E203 whitespace before ':' warnings in style guide enforcement tools like Flake8.
    # Since E203 is not PEP 8 compliant, we tell Flake8 to ignore this warning.
    # https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#slices
    "E203"
]

[tool.pytest.ini_options]
addopts = "--cov=startracker --cov-report xml"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # pydocstring
    "D",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # boolean trap
    "FBT001",
    # Built in shadowing
    "A001",
    "C416",
    "NPY",
    "PERF",
    "W",
    # Pep8 naming
    "N",
    "UP",
    "S",
    "C4",
    "DTZ",
    "T10",
    "EXE",
    "ISC",
    "ICN",
    "LOG",
    "PIE",
    "Q",
    "RET",
    "SLF001",
    "TID",
    "TCH",
    "ARG",
    "PTH",
]
ignore = [
    "D105",
    "D107",
    "D101",
    "D102",
    "D103",
    "S101", # Use of `assert` detected
    "S104", # Possible binding to all interfaces
    "S301", # Pickle
    "ISC001", # conflict with formatter
    "RET504", # Reduces readability in my opinion
]
pydocstyle.convention = "google"
